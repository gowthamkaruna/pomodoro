{"version":3,"sources":["components/TypeSelect.js","helpers.js","components/TimeDisplay.js","components/Controls.js","components/Shortcuts.js","components/ToggleSound.js","components/Tasks/TaskToggle/index.js","components/Tasks/TaskList/context.js","components/Tasks/Task/index.js","components/Tasks/TaskList/index.js","containers/Pomodoro.js","index.js"],"names":["memo","_ref","types","changeType","selected","react_default","a","createElement","className","map","type","index","key","name","onClick","pad2","num","concat","formatTime","time","minutes","Math","floor","seconds","TimeDisplay","status","progress","document","title","circumference","normalizedRadius","PI","strokeDashoffset","width","viewBox","radius","stroke","fill","strokeWidth","r","cx","cy","strokeDasharray","style","start","reset","pause","sound","toggleSound","task","toggleTask","createContext","Task","ref","useRef","_useContext","useContext","TaskContext","move","handleStatus","_useDrag","useDrag","item","id","collect","monitor","isDragging","_useDrag2","Object","slicedToArray","dragRef","_useDrop","useDrop","accept","hover","dragged","target","targetSize","current","getBoundingClientRect","targetCenter","bottom","top","draggedTop","getClientOffset","y","order","dropRef","closed","selectedTaskType","_useState","useState","_useState2","input","setInput","taskStatus","value","_useState3","JSON","parse","window","localStorage","getItem","_useState4","tasks","setTasks","_useState5","_useState6","selectedStatus","setSelectedStatus","useEffect","setItem","stringify","context","Provider","from","to","produce","draft","taskMoved","splice","console","log","foundIndex","findIndex","src_components_TypeSelect","length","filter","onChange","e","placeholder","push","Pomodoro","props","_this","classCallCheck","this","_super","call","handleKeyUp","event","tagName","pauseTimer","resetTimer","setState","selectedType","running","tick","state","stopInterval","play","navigator","serviceWorker","register","then","sw","showNotification","clearInterval","interval","startTimer","setInterval","currentTime","getStatus","_this$state","getProgress","total","handleToggleSound","handleToggleTask","addEventListener","Notification","requestPermission","Audio","preload","removeEventListener","_this$state2","src_components_TimeDisplay","src_components_Controls","Tasks_TaskToggle","src_components_Shortcuts","src_components_ToggleSound","Tasks_TaskList","Component","defaultProps","ReactDOM","render","DndProvider","backend","HTML5Backend","src_containers_Pomodoro","getElementById"],"mappings":"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","file":"static/js/main.2f9938af.chunk.js","sourcesContent":["import React, { memo } from 'react';\r\nimport './TypeSelect.css';\r\n\r\nconst TypeSelect = ({ types, changeType, selected }) => (\r\n  <div className=\"TypeSelect\">\r\n    {types.map((type, index) => (\r\n      <button\r\n        key={type.name}\r\n        onClick={() => changeType(type)}\r\n        className={type.name === selected.name ? 'active' : ''}\r\n      >\r\n        {type.name}\r\n      </button>\r\n    ))}\r\n  </div>\r\n);\r\n\r\nexport default memo(TypeSelect);\r\n","function pad2(num) {\r\n  return num > 9 ? num : `0${num}`;\r\n}\r\n\r\nexport function formatTime(time) {\r\n  const minutes = pad2(Math.floor(time / 60));\r\n  const seconds = pad2(Math.floor(time % 60));\r\n\r\n  return `${minutes}:${seconds}`;\r\n}\r\n","import React from 'react';\r\nimport { formatTime } from '../helpers';\r\nimport './TimeDisplay.css';\r\n\r\nconst TimeDisplay = ({ time, status, progress }) => {\r\n  document.title = `(${formatTime(time)}) Pomodoro`;\r\n\r\n  const radius = 150;\r\n  const stroke = 5;\r\n  const normalizedRadius = radius - stroke * 2;\r\n  const circumference = normalizedRadius * 2 * Math.PI;\r\n  const strokeDashoffset = circumference - (progress / 100) * circumference;\r\n\r\n  return (\r\n    <div className=\"TimeDisplay\">\r\n      <svg width=\"100%\" viewBox={`0 0 ${radius * 2} ${radius * 2}`}>\r\n        <circle\r\n          stroke=\"#ddd\"\r\n          fill=\"#fff\"\r\n          strokeWidth={stroke}\r\n          r={normalizedRadius}\r\n          cx={radius}\r\n          cy={radius}\r\n        />\r\n        <circle\r\n          stroke=\"#D9534F\"\r\n          fill=\"transparent\"\r\n          strokeWidth={stroke}\r\n          strokeDasharray={circumference + ' ' + circumference}\r\n          style={{ strokeDashoffset }}\r\n          r={normalizedRadius}\r\n          cx={radius}\r\n          cy={radius}\r\n        />\r\n      </svg>\r\n      <div>\r\n        <h1>{formatTime(time)}</h1>\r\n        <p>{status}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TimeDisplay;\r\n","import React, { memo } from 'react';\r\nimport './Controls.css';\r\n\r\nconst Controls = ({ start, reset, pause, status }) => (\r\n  <div className=\"Controls\">\r\n    {!status && (\r\n      <button onClick={start} className=\"start\">\r\n        Start Timer\r\n      </button>\r\n    )}\r\n\r\n    {status === 'Finished' && (\r\n      <button onClick={start} className=\"start\">\r\n        Restart Timer\r\n      </button>\r\n    )}\r\n\r\n    {(status === 'Paused' || status === 'Running') && (\r\n      <div>\r\n        <button onClick={reset} className=\"reset\">\r\n          Reset\r\n        </button>\r\n        <button\r\n          onClick={pause}\r\n          className={status === 'Paused' ? 'resume' : 'pause'}\r\n        >\r\n          {status === 'Paused' ? 'Resume' : 'Pause'}\r\n        </button>\r\n      </div>\r\n    )}\r\n  </div>\r\n);\r\n\r\nexport default memo(Controls);\r\n","import React, { memo } from 'react';\r\nimport './Shortcuts.css';\r\n\r\nconst Shortcuts = () => (\r\n  <div className=\"Shortcuts\">\r\n    <i className=\"far fa-keyboard\" />\r\n    <div className=\"Shortcuts-box\">\r\n      <div className=\"Shortcut\">\r\n        <div>Play / Pause / Resume</div>\r\n        <div>\r\n          <kbd>Space</kbd>\r\n        </div>\r\n      </div>\r\n      <div className=\"Shortcut\">\r\n        <div>Reset</div>\r\n        <div>\r\n          <kbd>Esc</kbd>\r\n        </div>\r\n      </div>\r\n      <div className=\"Shortcut\">\r\n        <div>Pomodoro</div>\r\n        <div>\r\n          <kbd>1</kbd>\r\n          <kbd>Num1</kbd>\r\n        </div>\r\n      </div>\r\n      <div className=\"Shortcut\">\r\n        <div>Short Break</div>\r\n        <div>\r\n          <kbd>2</kbd>\r\n          <kbd>Num2</kbd>\r\n        </div>\r\n      </div>\r\n      <div className=\"Shortcut\">\r\n        <div>Long Break</div>\r\n        <div>\r\n          <kbd>3</kbd>\r\n          <kbd>Num3</kbd>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n);\r\n\r\nexport default memo(Shortcuts);\r\n","import React, { memo } from 'react';\r\nimport './ToggleSound.css';\r\n\r\nconst ToggleSound = ({ sound, toggleSound }) => (\r\n  <button\r\n    className={`ToggleSound ${sound && 'active'}`}\r\n    onClick={toggleSound}\r\n    title={sound ? 'Disable Sound' : 'Enable Sound'}\r\n  >\r\n    <i className={`fa fa-volume-${sound ? 'up' : 'mute'}`} />\r\n  </button>\r\n);\r\n\r\nexport default memo(ToggleSound);\r\n","import React, { memo } from 'react';\r\nimport './styles.css';\r\n\r\nconst TaskToggle = ({ task, toggleTask }) => (\r\n  <button\r\n    className={`ToggleTask ${task && 'active'}`}\r\n    onClick={toggleTask}\r\n    title={task ? 'Disable Task' : 'Enable Task'}\r\n  >\r\n    <i className={'fa fa-tasks'} />\r\n  </button>\r\n);\r\n\r\nexport default memo(TaskToggle);\r\n","import { createContext } from 'react';\r\n\r\nexport default createContext({});\r\n","import React, { useRef, useContext } from 'react';\r\nimport { useDrag, useDrop } from 'react-dnd';\r\nimport './styles.css';\r\n\r\nimport TaskContext from '../TaskList/context';\r\n\r\nexport default function Task({ task, index }) {\r\n  const ref = useRef();\r\n  const { move, handleStatus } = useContext(TaskContext);\r\n  const [{ isDragging }, dragRef] = useDrag({\r\n    item: { type: 'TASK', id: task.id, index },\r\n    collect: monitor => ({\r\n      isDragging: monitor.isDragging()\r\n    })\r\n  });\r\n\r\n  const [, dropRef] = useDrop({\r\n    accept: 'TASK',\r\n    hover(item, monitor) {\r\n      if (item.id === task.id) return;\r\n      const dragged = item;\r\n      const target = task;\r\n      const targetSize = ref.current.getBoundingClientRect();\r\n      const targetCenter = (targetSize.bottom - targetSize.top) / 2;\r\n      const draggedOffset = monitor.getClientOffset();\r\n      const draggedTop = draggedOffset.y - targetSize.top;\r\n\r\n      if (dragged.order < target.order && draggedTop < targetCenter) return;\r\n      if (dragged.order > target.order && draggedTop > targetCenter) return;\r\n\r\n      move(item.index, index);\r\n      item.index = index;\r\n    }\r\n  });\r\n\r\n  dragRef(dropRef(ref));\r\n\r\n  return (\r\n    <div ref={ref} className={isDragging ? 'Task Dragging' : 'Task'}>\r\n      <div>{task.title}</div>\r\n      <span onClick={() => handleStatus(task)}>\r\n        {task.closed ? 'Open' : 'Close'}\r\n      </span>\r\n    </div>\r\n  );\r\n}\r\n","import React, { memo, useState, useEffect } from 'react';\r\nimport produce from 'immer';\r\nimport TaskContext from './context';\r\nimport Task from '../Task';\r\nimport TypeSelect from '../../TypeSelect';\r\n\r\nimport './styles.css';\r\n\r\nconst TaskList = ({ selectedTaskType }) => {\r\n  const [input, setInput] = useState('');\r\n  const taskStatus = [\r\n    { name: 'All', value: -1 },\r\n    { name: 'Open', value: false },\r\n    { name: 'Closed', value: true }\r\n  ];\r\n\r\n  const [tasks, setTasks] = useState(\r\n    JSON.parse(window.localStorage.getItem('pomodoro-react-tasks')) || []\r\n  );\r\n  const [selectedStatus, setSelectedStatus] = useState(taskStatus[0]);\r\n\r\n  useEffect(() => {\r\n    window.localStorage.setItem('pomodoro-react-tasks', JSON.stringify(tasks));\r\n  }, [tasks]);\r\n\r\n  function move(from, to) {\r\n    setTasks(\r\n      produce(tasks, draft => {\r\n        const taskMoved = draft[from];\r\n        draft.splice(from, 1);\r\n        draft.splice(to, 0, taskMoved);\r\n      })\r\n    );\r\n  }\r\n\r\n  function handleStatus(task) {\r\n    console.log('task:', task);\r\n    setTasks(\r\n      produce(tasks, draft => {\r\n        const foundIndex = draft.findIndex(item => item.id === task.id);\r\n        draft[foundIndex].closed = !draft[foundIndex].closed;\r\n      })\r\n    );\r\n  }\r\n\r\n  function addTask() {\r\n    setTasks(\r\n      produce(tasks, draft => {\r\n        draft.push({ id: draft.length + 1, title: input, closed: false });\r\n      })\r\n    );\r\n    setInput('');\r\n  }\r\n\r\n  return (\r\n    <TaskContext.Provider value={{ tasks, move, handleStatus }}>\r\n      <TypeSelect\r\n        types={taskStatus}\r\n        selected={selectedStatus}\r\n        changeType={setSelectedStatus}\r\n      />\r\n      <div className=\"Tasks\">\r\n        <div className=\"Tasks-box\">\r\n          {tasks.length > 0 ? (\r\n            tasks\r\n              .filter(\r\n                task =>\r\n                  task.closed === selectedStatus.value ||\r\n                  selectedStatus.value === -1\r\n              )\r\n              .map((task, index) => (\r\n                <Task key={task.id} index={index} task={task} />\r\n              ))\r\n          ) : (\r\n            <div className=\"Task\">No Tasks</div>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div className=\"Task\">\r\n        <input\r\n          value={input}\r\n          onChange={e => setInput(e.target.value)}\r\n          placeholder=\"New Task\"\r\n        />\r\n        <span onClick={addTask}>{'Add'}</span>\r\n      </div>\r\n\r\n    </TaskContext.Provider>\r\n  );\r\n};\r\n\r\nexport default memo(TaskList);\r\n","import React, { Component } from 'react';\r\nimport TypeSelect from '../components/TypeSelect';\r\nimport TimeDisplay from '../components/TimeDisplay';\r\nimport Controls from '../components/Controls';\r\nimport Shortcuts from '../components/Shortcuts';\r\nimport ToggleSound from '../components/ToggleSound';\r\nimport ToggleTask from '../components/Tasks/TaskToggle';\r\nimport TaskList from '../components/Tasks/TaskList';\r\nimport './Pomodoro.css';\r\n\r\nclass Pomodoro extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      selectedType: props.types[0],\r\n      time: props.types[0].time,\r\n      interval: null,\r\n      running: false,\r\n      sound:\r\n        JSON.parse(window.localStorage.getItem('pomodoro-react-sound')) || true,\r\n      taskStatus:\r\n        JSON.parse(window.localStorage.getItem('pomodoro-react-taskStatus')) ||\r\n        null\r\n    };\r\n  }\r\n\r\n  static defaultProps = {\r\n    types: [\r\n      { name: 'Pomodoro', time: 1500 },\r\n      { name: 'Short Break', time: 300 },\r\n      { name: 'Long Break', time: 900 }\r\n    ]\r\n  };\r\n\r\n  componentDidMount() {\r\n    document.addEventListener('keyup', this.handleKeyUp);\r\n    Notification.requestPermission();\r\n    this.sound = new Audio('bell.flac');\r\n    this.sound.preload = 'auto';\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    document.removeEventListener('keyup', this.handleKeyUp);\r\n  }\r\n\r\n  handleKeyUp = event => {\r\n    if (event.target.tagName === 'INPUT') return;\r\n    if (event.key === ' ') {\r\n      this.pauseTimer();\r\n    } else if (event.key === 'Escape') {\r\n      this.resetTimer();\r\n    } else if (event.key >= 1 && event.key <= this.props.types.length) {\r\n      this.changeType(this.props.types[event.key - 1]);\r\n    }\r\n  };\r\n\r\n  changeType = type => {\r\n    this.resetTimer();\r\n    this.setState({ selectedType: type, time: type.time, running: false });\r\n  };\r\n\r\n  tick = () => {\r\n    if (this.state.time <= 1) {\r\n      this.stopInterval();\r\n      this.setState({ running: false });\r\n      if (this.state.sound) this.sound.play();\r\n      try {\r\n        navigator.serviceWorker.register('service-worker.js').then(sw => {\r\n          sw.showNotification(`${this.state.selectedType.name} finished!`);\r\n        });\r\n      } catch (e) {\r\n        console.log('Notification error', e);\r\n      }\r\n    }\r\n    this.setState(state => ({ time: state.time - 1 }));\r\n  };\r\n\r\n  stopInterval = () => {\r\n    clearInterval(this.state.interval);\r\n    this.setState({ interval: null });\r\n  };\r\n\r\n  startTimer = () => {\r\n    this.setState(state => ({\r\n      running: true,\r\n      interval: setInterval(this.tick, 1000),\r\n      time: state.time > 0 ? state.time : state.selectedType.time\r\n    }));\r\n    this.sound.pause();\r\n    this.sound.currentTime = 0;\r\n  };\r\n\r\n  resetTimer = () => {\r\n    this.stopInterval();\r\n    this.setState(state => ({\r\n      time: state.selectedType.time,\r\n      running: false\r\n    }));\r\n  };\r\n\r\n  pauseTimer = () => {\r\n    this.state.interval ? this.stopInterval() : this.startTimer();\r\n  };\r\n\r\n  getStatus = () => {\r\n    const { time, running, interval } = this.state;\r\n    if (time === 0) return 'Finished';\r\n    if (running && !interval) return 'Paused';\r\n    if (running) return 'Running';\r\n  };\r\n\r\n  getProgress = () => {\r\n    const current = this.state.time;\r\n    const total = this.state.selectedType.time;\r\n    return ((total - current) / total) * 100;\r\n  };\r\n\r\n  handleToggleSound = () => {\r\n    this.setState(\r\n      state => ({\r\n        sound: !state.sound\r\n      }),\r\n      () => {\r\n        window.localStorage.setItem('pomodoro-react-sound', this.state.sound);\r\n      }\r\n    );\r\n  };\r\n\r\n  handleToggleTask = () => {\r\n    this.setState(\r\n      state => ({\r\n        taskStatus: !state.taskStatus\r\n      }),\r\n      () => {\r\n        window.localStorage.setItem(\r\n          'pomodoro-react-taskStatus',\r\n          this.state.taskStatus\r\n        );\r\n      }\r\n    );\r\n  };\r\n\r\n  render() {\r\n    const { time, selectedType, sound, taskStatus } = this.state;\r\n    const { types } = this.props;\r\n\r\n    return (\r\n      <div className=\"Content\">\r\n        <div className=\"Pomodoro\">\r\n          <TypeSelect\r\n            types={types}\r\n            selected={selectedType}\r\n            changeType={this.changeType}\r\n          />\r\n          <TimeDisplay\r\n            time={time}\r\n            status={this.getStatus()}\r\n            progress={this.getProgress()}\r\n          />\r\n          <Controls\r\n            start={this.startTimer}\r\n            reset={this.resetTimer}\r\n            pause={this.pauseTimer}\r\n            status={this.getStatus()}\r\n          />\r\n          <ToggleTask task={taskStatus} toggleTask={this.handleToggleTask} />\r\n          <Shortcuts />\r\n          <ToggleSound sound={sound} toggleSound={this.handleToggleSound} />\r\n        </div>\r\n        {taskStatus && (\r\n          <div className=\"TaskPainel\">\r\n            <TaskList />\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Pomodoro;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport HTML5Backend from 'react-dnd-html5-backend';\r\nimport { DndProvider } from 'react-dnd';\r\nimport Pomodoro from './containers/Pomodoro';\r\n\r\nReactDOM.render(\r\n  <DndProvider backend={HTML5Backend}>\r\n    <Pomodoro />\r\n  </DndProvider>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}